<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>name</key>
    <string>JavaScript.Recursive</string>
    <key>comment</key>
    <string>JavaScript Syntax: recursive version 13/12/16</string>
    <key>fileTypes</key>
    <array>
        <string>js</string>
        <string>htc</string>
        <string>jsx</string>
        <string>map</string>
        <string>json</string>
    </array>
    <key>firstLineMatch</key>
    <string>^#!/usr/bin/env node</string>
    <key>foldingStartMarker</key>
    <string>^.*\bfunction\s*(\w+\s*)?\([^\)]*\)(\s*\{[^\}]*)?\s*$</string>
    <key>foldingStopMarker</key>
    <string>^\s*\}</string>
    <key>keyEquivalent</key>
    <string>^~J</string>
    <!--
        # SCOPES

        ## meta.function-call

            object.message();
                   ~~~~~~~~
            task();
            ~~~~~

        ## support.function
            var obj = {}
                      ~~
            var arr = []
                      ~~

    -->
    <key>patterns</key>
    <array>

        <dict>
            <key>include</key>
            <string>#recursion</string>
        </dict>

        <!-- cleanup -->

        <dict id="support.constants">

            <key>match</key>
            <string>(?&lt;=\.)(s(ystemLanguage|cr(ipts|ollbars|een(X|Y|Top|Left))|t(yle(Sheets)?|atus(Text|bar)?)|ibling(Below|Above)|ource|uffixes|e(curity(Policy)?|l(ection|f)))|h(istory|ost(name)?|as(h|Focus))|y|X(MLDocument|SLDocument)|n(ext|ame(space(s|URI)|Prop))|M(IN_VALUE|AX_VALUE)|c(haracterSet|o(n(structor|trollers)|okieEnabled|lorDepth|mp(onents|lete))|urrent|puClass|l(i(p(boardData)?|entInformation)|osed|asses)|alle(e|r)|rypto)|t(o(olbar|p)|ext(Transform|Indent|Decoration|Align)|ags)|SQRT(1_2|2)|i(n(ner(Height|Width)|put)|ds|gnoreCase)|zIndex|o(scpu|n(readystatechange|Line)|uter(Height|Width)|p(sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(i(splay|alog(Height|Top|Width|Left|Arguments)|rectories)|e(scription|fault(Status|Ch(ecked|arset)|View)))|u(ser(Profile|Language|Agent)|n(iqueID|defined)|pdateInterval)|_content|p(ixelDepth|ort|ersonalbar|kcs11|l(ugins|atform)|a(thname|dding(Right|Bottom|Top|Left)|rent(Window|Layer)?|ge(X(Offset)?|Y(Offset)?))|r(o(to(col|type)|duct(Sub)?|mpter)|e(vious|fix)))|e(n(coding|abledPlugin)|x(ternal|pando)|mbeds)|v(isibility|endor(Sub)?|Linkcolor)|URLUnencoded|P(I|OSITIVE_INFINITY)|f(ilename|o(nt(Size|Family|Weight)|rmName)|rame(s|Element)|gColor)|E|whiteSpace|l(i(stStyleType|n(eHeight|kColor))|o(ca(tion(bar)?|lName)|wsrc)|e(ngth|ft(Context)?)|a(st(M(odified|atch)|Index|Paren)|yer(s|X)|nguage))|a(pp(MinorVersion|Name|Co(deName|re)|Version)|vail(Height|Top|Width|Left)|ll|r(ity|guments)|Linkcolor|bove)|r(ight(Context)?|e(sponse(XML|Text)|adyState))|global|x|m(imeTypes|ultiline|enubar|argin(Right|Bottom|Top|Left))|L(N(10|2)|OG(10E|2E))|b(o(ttom|rder(Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(Color|Image))|)\b</string>
            <key>name</key>
            <string>support.constant.js</string>

        </dict>

        <!-- ! CAPTURE TEXT: match complete start of line -->
        <!--

            .* does not capture values, if
             - scope begins at line start.
                i.e. [var][constructor construct]... (;) = captured by .*

        -->

        <!--
        <dict>
            <key>match</key>
            <string>.*</string>
            <key>name</key>
            <string>blackBG.js</string>
        </dict>
        -->

    </array>


    <key>repository</key>

    <dict>

        <key>require</key>
        <dict id="require">

            <key>name</key>
            <string>require.js</string>
            <key>comment</key>
            <string>require("path") - PathCompletion</string>

            <key>match</key>
            <string>require\s*\(\s*((["'])([^"]*)(["']))\s*\)</string>

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>string.js</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>string.quoted.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.js</string>
                </dict>
            </dict>


        </dict>

        <!-- separate function definition patterns for correct symbol listing -->

        <key>closure</key>
        <dict id="closure">

            <key>name</key>
            <string>meta.block.js</string>
            <key>comment</key>
            <string>Namespace.Class :|= (function () {</string>

            <!-- dirty matches alle namespaces (upper / lowercase) -->
            <key>begin</key>
            <string>\s*((\w+\.)*)?([A-z0-9_$?]*)?(\s|^)(=\s|:\s)?(\()(function)\s([A-z0-9_?$]*)(\()([\w\s,_$?]*)(\))\s(\{)</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.function.closure.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.parent.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>entity.closure.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.symbol.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.function.js</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.declaration.js</string>
                </dict>
                <key>9</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>10</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.js</string>
                </dict>
                <key>11</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>12</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>\s*(\})\s*(\()(.*)(\))\s*(\))</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.function.closure.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.end.js</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>meta.braces.round.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>variable.other.argument.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>meta.braces.round.js</string>
                </dict>

                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>meta.braces.round.js</string>
                </dict>
            </dict>

        </dict>


        <key>class.prototype.method</key>
        <dict id="class.prototype.method">

            <key>name</key>
            <string>meta.block.method.js</string>
            <key>comment</key>
            <string>Namespaces.Class.prototype.method = function optional( parameters ) {</string>
            <key>begin</key>
            <!--        1  2       3        4          5     6       7         8    9  10  11    12     -->
            <string>\s*((\w+\.)*)(\w*)\.(prototype)\.(\w*)\s(=)\s(function)\s(\w*)(\()(.*)(\))\s(\{)</string>

            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.class.prototype.method.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.parent.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <!--<string>support.class.js</string>-->
                    <string>entity.name.class.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>support.constant.prototype.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.symbol.js</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.function.js</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.declaration.js</string>
                </dict>
                <key>9</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>10</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.js</string>
                </dict>
                <key>11</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>12</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\})\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.end.js</string>
                </dict>
            </dict>

        </dict>


        <key>class.prototype</key>
        <dict id="class.prototype = {">

            <key>name</key>
            <string>meta.block.prototype.js</string>
            <key>comment</key>
            <string>Namespace.Class.prototype = { … }</string>

            <key>begin</key>
            <string>\s*((\w+\.)*)(\b[A-Z]\w*)\.(prototype)\s(=)\s(\{)</string>

            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.class.prototype.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.parent.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <!--<string>support.class.js</string>-->
                    <string>entity.name.class.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>support.constant.prototype.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.symbol.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>support.function.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\});?\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.function.end.js</string>
                </dict>
            </dict>

        </dict>

        <key>class.prototype.chain</key>
        <dict id="class.prototype.chain">

            <key>name</key>
            <string>meta.block.prototype.js</string>
            <key>comment</key>
            <string>Namespace.Class.prototype =</string>

            <key>match</key>
            <string>\s*((\w+\.)*)(\b[A-Z]\w*)\.(prototype)\s(=)</string>

            <key>captures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.class.prototype.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.parent.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <!--<string>support.class.js</string>-->
                    <string>entity.name.class.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>support.constant.prototype.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.symbol.js</string>
                </dict>
            </dict>

        </dict>

        <key>object.method</key>
        <dict id="object.method">

            <key>name</key>
            <string>meta.block.function.js</string>
            <key>comment</key>
            <string>'method': function name( paramters ) {</string>

            <key>begin</key>
            <string>\s*('|")?([A-Za-z0-9_$?\s]*)('|")?(:)[\s\(]*(function)\s(\w*)(\()(.*)(\))\s(\{)</string>

            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.object.method.js</string>
                </dict>
                <!-- 1: ' -->
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.js</string>
                </dict>
                <!-- 3: ' -->
                <!-- 4: : -->
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.function.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.declaration.js</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.js</string>
                </dict>
                <key>9</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>10</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\}),?\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.end.js</string>
                </dict>
            </dict>

        </dict>


        <key>class.mootools</key>
        <dict id="class.mootools">

            <key>name</key>
            <string>meta.block.constructor.js</string>
            <key>comment</key>
            <string>Namespaces.Class = new Class({</string>
            <key>begin</key>
            <string>\s*((\w+\.)*)(\b[A-Z]\w*)\s(=)\s(new)\s(Class)(\()(\{)</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.class.constructor.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.parent.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.class.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.symbol.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.word.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>support.class.js</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\})\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.end.js</string>
                </dict>
            </dict>

        </dict>


        <key>class.constructor</key>
        <dict id="class.constructor">

            <key>name</key>
            <string>meta.block.constructor.js</string>
            <key>comment</key>
            <string>Namespaces.Class = function optional( parameters ) {</string>

            <!-- may be constructor or static function (convention) -->
            <key>begin</key>
            <string>\s*((\w+\.)*)(\b[A-Z]\w*)\s(=)\s(function)\s(\w*)(\()(.*)(\))\s(\{)</string>

            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.class.constructor.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.parent.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.class.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.symbol.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.function.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.declaration.js</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.js</string>
                </dict>
                <key>9</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>10</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\});?\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.end.js</string>
                </dict>
            </dict>

        </dict>

        <key>function.expression</key>
        <dict id="function.expression">

            <key>name</key>
            <string>meta.block.function.js</string>

            <key>comment</key>
            <string> = function name( arguments ) {</string>

            <key>begin</key>
            <string>\s*((\w+\.)*)(\b[\w]*)\s(=)\s*(function)\s(\w*)(\()(.*)(\))\s(\{)</string>

            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.function.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.parent.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.symbol.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.function.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.declaration.js</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.js</string>
                </dict>
                <key>9</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>10</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\})\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.end.js</string>
                </dict>
            </dict>

        </dict>

        <key>function.definition</key>
        <dict id="function.definition">

            <key>name</key>
            <string>meta.block.function.js</string>

            <key>comment</key>
            <string>function name( arguments ) {</string>

            <key>begin</key>
            <string>\s*(function)\s(\w*)(\()([^{]*)(\))\s(\{)</string>
            <!-- <string>((\"|\')?\w*(\"|\')?:)?\s*(function)\s(\w*)(\()([^{]*)(\))\s(\{)</string> -->

            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.function.js</string>
                </dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.function.js</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.function.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>variable.parameter.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\})\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.end.js</string>
                </dict>
            </dict>

        </dict>


        <key>block</key>
        <dict id="block">

            <key>name</key>
            <string>meta.block.js</string>
            <!--
                ( ... ) {
                else {
                do {
                case *:

                ambigious: {
                => not used
            -->
            <key>begin</key>
            <!--<string>((\(.*\))|(else|do)|((case)\s.*\:)|^\s*)\s(\{)</string>-->
            <string>((\))|(else|do|try)|((case)\s.*\:))\s(\{)</string>

            <key>beginCaptures</key>
            <dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>


            <key>end</key>
            <string>(\})\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.block.end.js</string>
                </dict>
            </dict>

        </dict>

        <key>object</key>
        <dict id="object">

            <key>name</key>
            <string>meta.object.js</string>

            <key>begin</key>
            <string>(\{)</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.function.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\})\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.function.end.js</string>
                </dict>
            </dict>

        </dict>


        <key>recursion</key>
        <dict id="#recursion">
            <key>patterns</key>
            <array>
                <!-- remove comments first -->
                <dict>
                    <key>include</key>
                    <string>#comment</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#require</string>
                </dict>
                <!-- separate function definition patterns => symbol list -->
                <dict>
                    <key>include</key>
                    <string>#closure</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class.prototype.method</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class.prototype</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class.prototype.chain</string>
                </dict>
                    <dict>
                        <!-- !should follow up class.prototype -->
                        <key>include</key>
                        <string>#object.method</string>
                    </dict>
                <dict>
                    <key>include</key>
                    <string>#class.mootools</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#class.constructor</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function.expression</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function.definition</string>
                </dict>
                <!-- other blocks -->
                <dict>
                    <key>include</key>
                    <string>#block</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#object</string>
                </dict>
                <!-- javascript language -->
                <dict>
                    <key>include</key>
                    <string>#array[index]</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#array</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#support.class</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#namespace</string>
                </dict>
                <!--
                <dict>
                    <key>include</key>
                    <string>#classname.prototype.method</string>
                </dict>
                -->

                <dict>
                    <key>include</key>
                    <string>#javascript.types</string>
                </dict>

            </array>
        </dict>


        <!-- !constructs -->



        <key>support.function</key>
        <dict id="support.functions()">

            <key>begin</key>
            <string>\b(s(ub(stringData|mit)|plitText|e(t(NamedItem|Attribute(Node)?)|lect))|has(ChildNodes|Feature)|namedItem|c(l(ick|o(se|neNode))|reate(C(omment|DATASection|aption)|T(Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(ntityReference|lement)|Attribute))|tabIndex|i(nsert(Row|Before|Cell|Data)|tem)|open|delete(Row|C(ell|aption)|T(Head|Foot)|Data)|focus|write(ln)?|a(dd|ppend(Child|Data))|re(set|place(Child|Data)|move(NamedItem|Child|Attribute(Node)?)?)|get(NamedItem|Element(sBy(Name|TagName)|ById)|Attribute(Node)?)|blur|getContext|(s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|ort|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(ome|andleEvent)|navigate|c(har(CodeAt|At)|o(s|n(cat|textual|firm)|mpile)|eil|lear(Timeout|Interval)?|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|i(s(NaN|Finite)|ndexOf|talics)|d(isableExternalCapture|ump|etachEvent)|u(n(shift|taint|escape|watch)|pdateCommands)|j(oin|avaEnabled)|p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|e(scape|nableExternalCapture|lementFromPoint|x(p|ec(Script|Command)?))|valueOf|UTC|queryCommand(State|Indeterm|Enabled|Value)|f(i(nd|le(ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(nt(size|color)|rward)|loor|romCharCode)|watch|l(ink|o(ad|g)|astIndexOf)|a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|r(ou(nd|teEvents)|e(size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|m(in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|b(toa|ig|o(ld|rderWidths)|link|ack))|)\b(?=\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.function.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\))[;,.]?</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
            </dict>

            <!--
            <key>name</key>
            <string>meta.function.invocation.js</string>
            -->

        </dict>

        <key>invocation</key>
        <dict id="invocation()">



            <key>begin</key>
            <string>(?!(?:function|if|while))(\.)?(([$]|[$$]|\b[a-z0-9_][a-zA-z0-9?]*)|(\b[A-Z][a-zA-z0-9?]*))(\()</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.delimiter.method.period.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>meta.function-call.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>meta.function-call.static.js</string>
                </dict>
                <key>5</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>

            <key>end</key>
            <string>(\))[;,.]?</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
            </dict>

        </dict>


        <key>support.class</key>
        <dict id="support.class">

            <key>name</key>
            <string>meta.class.js</string>

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.class.js</string>
                </dict>
            </dict>

            <key>comment</key>
            <string>Namespace.variable.AnotherNamespace.</string>
            <key>match</key>
            <string>(?!this\.)(\b(Anchor|Applet|Area|Array|Boolean|Button|Checkbox|Date|document|event|FileUpload|Form|Frame|Function|Hidden|History|Image|JavaArray|JavaClass|JavaObject|JavaPackage|java|Layer|Link|Location|Math|MimeType|Number|navigator|netscape|Object|Option|Packages|Password|Plugin|Radio|RegExp|Reset|Select|String|Style|Submit|screen|sun|Text|Textarea|window|XMLHttpRequest)\b)</string>

        </dict>


        <key>namespace</key>
        <dict id="Namespace.">

            <key>captures</key>
            <dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.parent.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>variable.other.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>meta.delimiter.method.period.js</string>
                </dict>
            </dict>
            <key>comment</key>
            <string>Namespace.variable.AnotherNamespace.</string>
            <key>match</key>
            <string>(?!this\.)((\b[A-Z][A-Za-z0-9_]*)|(\b[A-z_$?][\w_$?]*))(\.)(?!prototype)</string>

        </dict>

        <key>array[index]</key>
        <dict id="array[index]">

            <key>name</key>
            <string>entity.type.array.js</string>

            <key>begin</key>
            <string>\b\w+(\[)</string>

            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.square.js</string>
                </dict>
            </dict>


            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#array-index-helper</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>


            <key>end</key>
            <string>(\])</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.square.js</string>
                </dict>
            </dict>

        </dict>

        <key>array-index-helper</key>
        <dict>

            <key>name</key>
            <string>meta.brace.square.js</string>

            <key>match</key>
            <string>[^\]]+(\]\s*\[)</string>

        </dict>


        <key>array</key>
        <dict id="array">

            <key>name</key>
            <string>meta.array.js</string>

            <key>begin</key>
            <string>(\[)</string>

            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.function.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#recursion</string>
                </dict>
            </array>


            <key>end</key>
            <string>(\])\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>support.function.end.js</string>
                </dict>
            </dict>

        </dict>


        <key>regexp</key>
        <dict id="regexp">
            <key>begin</key>
            <string>(?&lt;=[=(:]|^|return|&amp;&amp;|\|\||!)\s*(/)(?![/*+{}?])</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.js</string>
                </dict>
            </dict>
            <key>end</key>
            <string>(/)[igm]*</string>
            <key>endCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.js</string>
                </dict>
            </dict>
            <key>name</key>
            <string>string.regexp.js</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\\.</string>
                    <key>name</key>
                    <string>constant.character.escape.js</string>
                </dict>
            </array>
        </dict>


        <key>string</key>
        <dict id="strings">

            <key>name</key>
            <string>string.js</string>

            <key>match</key>
            <string>((')([^']*)('))|((")([^"]*)("))</string>
            <key>captures</key>
            <dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>string.quoted.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.js</string>
                </dict>
                <key>6</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.js</string>
                </dict>
                <key>7</key>
                <dict>
                    <key>name</key>
                    <string>string.quoted.js</string>
                </dict>
                <key>8</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.js</string>
                </dict>
            </dict>
        </dict>

        <key>number</key>
        <dict id="number">

            <key>match</key>
            <string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
            <key>name</key>
            <string>constant.numeric.js</string>
        </dict>

        <key>boolean</key>
        <dict id="boolean">

            <key>match</key>
            <string>\b(true|false)\b</string>
            <key>name</key>
            <string>constant.language.boolean.js</string>
        </dict>

        <key>null</key>
        <dict id="null">

            <key>match</key>
            <string>\bnull\b</string>
            <key>name</key>
            <string>constant.language.null.js</string>
        </dict>

        <!--
            OPERATORS (grouped)

            ENFORCES
            - typecheck (===)
            - increment (+=) instead of ++
            - whitespaces around operator
        -->
        <key>operator</key>
        <dict id="operator">

            <key>match</key>
            <string> ! | % | / | &amp; | \* | \- | \+ | ~ | = | == | === |\s=\s| !== | &lt;&lt; | &lt;= | &lt;&lt;= |  &gt;= | &gt;&gt; | &gt;&gt;= | &gt;&gt;&gt;= | &lt;&gt; | &lt; | &gt; | &amp;&amp; | \|\| | \?\: | \*= | (?&lt;!\()/= | %= | \+= | \-= | &amp;= | \^= </string>
            <key>name</key>
            <string>keyword.operator.symbol.js</string>
        </dict>

        <key>operator.word</key>
        <dict id="operator.word">
            <key>match</key>
            <string>\b(delete|in|instanceof|new|typeof|with)\b</string>
            <key>name</key>
            <string>keyword.operator.js</string>
        </dict>

        <key>language</key>
        <dict id="language">

            <key>match</key>
            <string>\b(super|this)\b</string>
            <key>name</key>
            <string>variable.language.js</string>
        </dict>

        <key>constant</key>
        <dict id="constant">
            <key>match</key>
            <string>\b(Infinity|NaN|undefined)\b</string>
            <key>name</key>
            <string>constant.language.js</string>
        </dict>

        <key>storage</key>
        <dict id="storage">
            <key>match</key>
            <string>\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|short|var|void)\b</string>
            <key>name</key>
            <string>storage.type.js</string>
        </dict>

        <key>control</key>
        <dict id="control">
            <key>match</key>
            <string>\b(break|catch|default|finally|import|package)\b</string>
            <key>name</key>
            <string>keyword.control.js</string>
        </dict>

        <key>control (</key>
        <dict id="control (">
            <key>match</key>
            <string>\b(case|do|else|for|goto|if|switch|throw|try|while)\b\s</string>
            <key>name</key>
            <string>keyword.control.js</string>
        </dict>

        <key>control.return</key>
        <dict id="control.return">
            <key>match</key>
            <string>\breturn\b</string>
            <key>name</key>
            <string>keyword.control.return.js</string>
        </dict>

        <!--
            ( )
        -->
        <key>brace.round</key>
        <dict id="brace.round">
            <key>match</key>
            <string>\(|\)</string>
            <key>name</key>
            <string>meta.brace.round.js</string>
        </dict>


        <!-- ALL TYPES -->

        <key>javascript.types</key>
        <dict id="javascript.type">
            <!-- grab types -->
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#regexp</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#string</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#number</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operator.word</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#language</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#constant</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#storage</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#control</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#control (</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#control.return</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#null</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#brace.round</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#boolean</string>
                </dict>

                <dict>
                    <key>include</key>
                    <string>#support.function</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#invocation</string>
                </dict>
            </array>
        </dict>


        <!-- !comments -->


        <key>markdownH2</key>
        <dict id="markdown.h2">
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.h2.js</string>
                </dict>
            </dict>
            <key>match</key>
            <string>##(.*)$</string>
            <key>name</key>
            <string>comment.block.documentation.js</string>
        </dict>

        <key>markdownH1</key>
        <dict id="markdown.h1">
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.h1.js</string>
                </dict>
            </dict>
            <key>match</key>
            <string>#(.*)$</string>
            <key>name</key>
            <string>comment.block.documentation.js</string>
        </dict>

        <key>@single</key>
        <dict id="@statement">

            <key>match</key>
            <string>\s@[\w_]*$</string>
            <key>name</key>
            <string>comment.block.documentation.flag.js</string>
        </dict>

        <key>@arguments</key>
        <dict id="@param type name description">

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.type.js</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.parameter.type.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.parameter.name.js</string>
                </dict>
                <key>4</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.parameter.description.js</string>
                </dict>
            </dict>

            <key>match</key>
            <string>\s(@param)\s+\{(.*)\}\s*([\w_]*)\s*(.*)$</string>

            <key>name</key>
            <string>comment.block.documentation.variable.js</string>
        </dict>

        <key>@return</key>
        <dict id="@return type description">

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.type.js</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.parameter.type.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.parameter.description.js</string>
                </dict>
            </dict>
            <key>match</key>
            <string>\s(@return)\s+\{(.*)\}\s*(.*)$</string>
            <key>name</key>
            <string>comment.block.documentation.variable.js</string>
        </dict>

        <key>@keyvalue</key>
        <dict id="@key value">

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.type.js</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.variable.value.js</string>
                </dict>
            </dict>
            <key>match</key>
            <string>\s(@[\w_]*)\s+(.*)$</string>
            <key>name</key>
            <string>comment.block.documentation.js</string>
        </dict>

        <!-- <key>comment.documentation</key>
        <dict id="comment.documentation.markdown">

            <key>name</key>
            <string>comment.block.documentation.js text.html.markdown</string>

            <key>begin</key>
            <string>\s*\/\*\*</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>text.html.markdown</string>
                </dict>
            </array>

            <key>end</key>
            <string>\s*\*\/\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.end.js</string>
                </dict>
            </dict>

        </dict> -->

        <key>comment.documentation</key>
        <dict id="comment.documentation">

            <key>begin</key>
            <string>\s*\/\*\*</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.start.js</string>
                </dict>
            </dict>

            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>^\s*\*</string>
                    <key>name</key>
                    <string>meta.asterix.js</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#markdownH2</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#markdownH1</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#@single</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#@arguments</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#@return</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#@keyvalue</string>
                </dict>
            </array>

            <key>end</key>
            <string>\s**\*\/\s*</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.documentation.end.js</string>
                </dict>
            </dict>

            <key>name</key>
            <string>comment.block.documentation.js</string>

        </dict>

        <key>comment.line.label</key>
        <dict id="comment.line.label">

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>comment.line.double-slash.before.js</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>comment.line.double-slash.js</string>
                </dict>
                <key>3</key>
                <dict>
                    <key>name</key>
                    <string>comment.line.double-slash.label.js</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(\s*)(//\s)(\!.*)$\n?</string>
            <key>name</key>
            <string>comment.line.double-slash.label.js</string>
        </dict>

        <key>comment.line</key>
        <dict id="comment.line">

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>comment.line.double-slash.js</string>
                </dict>
            </dict>
            <key>match</key>
            <string>(//.*)$\n?</string>
            <key>name</key>
            <string>comment.line.double-slash.js</string>
        </dict>

        <key>comment.block</key>
        <dict id="comment.block">

            <key>begin</key>
            <string>\/\*</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.js</string>
                </dict>
            </dict>
            <key>end</key>
            <string>\*\/</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>comment.block.js</string>
                </dict>
            </dict>
            <key>name</key>
            <string>comment.block.js</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\s(@[^*$]*)</string>
                    <key>name</key>
                    <string>comment.block.variable.js</string>
                </dict>
            </array>
        </dict>

        <key>comment</key>
        <dict id="comment">
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#comment.documentation</string>
                </dict>

                <dict>
                    <key>include</key>
                    <string>#comment.block</string>
                </dict>

                <dict>
                    <key>include</key>
                    <string>#comment.line.label</string>
                </dict>

                <dict>
                    <key>include</key>
                    <string>#comment.line</string>
                </dict>
            </array>
        </dict>

    </dict>


    <key>scopeName</key>
    <string>source.js</string>
    <key>uuid</key>
    <string>93E017CC-6F27-11D9-90EB-000D93589AF6</string>
</dict>
</plist>
